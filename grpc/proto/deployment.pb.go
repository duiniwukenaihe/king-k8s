// Code generated by protoc-gen-go. DO NOT EDIT.
// source: deployment.proto

package k8s

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeploymentRequest struct {
	Cluster              string   `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ProductId            string   `protobuf:"bytes,3,opt,name=productId,proto3" json:"productId,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Labels               string   `protobuf:"bytes,5,opt,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeploymentRequest) Reset()         { *m = DeploymentRequest{} }
func (m *DeploymentRequest) String() string { return proto.CompactTextString(m) }
func (*DeploymentRequest) ProtoMessage()    {}
func (*DeploymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fac0ec10f8e4d7ff, []int{0}
}

func (m *DeploymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentRequest.Unmarshal(m, b)
}
func (m *DeploymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentRequest.Marshal(b, m, deterministic)
}
func (m *DeploymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentRequest.Merge(m, src)
}
func (m *DeploymentRequest) XXX_Size() int {
	return xxx_messageInfo_DeploymentRequest.Size(m)
}
func (m *DeploymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentRequest proto.InternalMessageInfo

func (m *DeploymentRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *DeploymentRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DeploymentRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *DeploymentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeploymentRequest) GetLabels() string {
	if m != nil {
		return m.Labels
	}
	return ""
}

type DeploymentResponse struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeploymentResponse) Reset()         { *m = DeploymentResponse{} }
func (m *DeploymentResponse) String() string { return proto.CompactTextString(m) }
func (*DeploymentResponse) ProtoMessage()    {}
func (*DeploymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fac0ec10f8e4d7ff, []int{1}
}

func (m *DeploymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploymentResponse.Unmarshal(m, b)
}
func (m *DeploymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploymentResponse.Marshal(b, m, deterministic)
}
func (m *DeploymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploymentResponse.Merge(m, src)
}
func (m *DeploymentResponse) XXX_Size() int {
	return xxx_messageInfo_DeploymentResponse.Size(m)
}
func (m *DeploymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeploymentResponse proto.InternalMessageInfo

func (m *DeploymentResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*DeploymentRequest)(nil), "k8s.DeploymentRequest")
	proto.RegisterType((*DeploymentResponse)(nil), "k8s.DeploymentResponse")
}

func init() { proto.RegisterFile("deployment.proto", fileDescriptor_fac0ec10f8e4d7ff) }

var fileDescriptor_fac0ec10f8e4d7ff = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x48, 0x49, 0x2d, 0xc8,
	0xc9, 0xaf, 0xcc, 0x4d, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce, 0xb6,
	0x28, 0x56, 0x9a, 0xca, 0xc8, 0x25, 0xe8, 0x02, 0x97, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e,
	0x11, 0x92, 0xe0, 0x62, 0x4f, 0xce, 0x29, 0x2d, 0x2e, 0x49, 0x2d, 0x92, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0x82, 0x71, 0x85, 0x64, 0xb8, 0x38, 0xf3, 0x12, 0x73, 0x53, 0x8b, 0x0b, 0x12, 0x93,
	0x53, 0x25, 0x98, 0xc0, 0x72, 0x08, 0x01, 0x90, 0x6c, 0x41, 0x51, 0x7e, 0x4a, 0x69, 0x72, 0x89,
	0x67, 0x8a, 0x04, 0x33, 0x44, 0x16, 0x2e, 0x20, 0x24, 0xc4, 0xc5, 0x02, 0x52, 0x2a, 0xc1, 0x02,
	0x96, 0x00, 0xb3, 0x85, 0xc4, 0xb8, 0xd8, 0x72, 0x12, 0x93, 0x52, 0x73, 0x8a, 0x25, 0x58, 0xc1,
	0xa2, 0x50, 0x9e, 0x92, 0x06, 0x97, 0x10, 0xb2, 0xb3, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x41,
	0x26, 0xa4, 0x24, 0x96, 0x24, 0x82, 0x1d, 0xc5, 0x13, 0x04, 0x66, 0x1b, 0xf9, 0x71, 0x71, 0x21,
	0x54, 0x0a, 0x39, 0x70, 0x71, 0xbb, 0xa7, 0x96, 0x38, 0x55, 0xfa, 0x80, 0x8d, 0x11, 0x12, 0xd3,
	0xcb, 0xb6, 0x28, 0xd6, 0xc3, 0xf0, 0xa0, 0x94, 0x38, 0x86, 0x38, 0xc4, 0x06, 0x25, 0x86, 0x24,
	0x36, 0x70, 0xe8, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x7f, 0x96, 0x53, 0x31, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeploymentClient is the client API for Deployment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeploymentClient interface {
	GetByLabels(ctx context.Context, in *DeploymentRequest, opts ...grpc.CallOption) (*DeploymentResponse, error)
}

type deploymentClient struct {
	cc *grpc.ClientConn
}

func NewDeploymentClient(cc *grpc.ClientConn) DeploymentClient {
	return &deploymentClient{cc}
}

func (c *deploymentClient) GetByLabels(ctx context.Context, in *DeploymentRequest, opts ...grpc.CallOption) (*DeploymentResponse, error) {
	out := new(DeploymentResponse)
	err := c.cc.Invoke(ctx, "/k8s.Deployment/GetByLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeploymentServer is the server API for Deployment service.
type DeploymentServer interface {
	GetByLabels(context.Context, *DeploymentRequest) (*DeploymentResponse, error)
}

// UnimplementedDeploymentServer can be embedded to have forward compatible implementations.
type UnimplementedDeploymentServer struct {
}

func (*UnimplementedDeploymentServer) GetByLabels(ctx context.Context, req *DeploymentRequest) (*DeploymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByLabels not implemented")
}

func RegisterDeploymentServer(s *grpc.Server, srv DeploymentServer) {
	s.RegisterService(&_Deployment_serviceDesc, srv)
}

func _Deployment_GetByLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeploymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeploymentServer).GetByLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/k8s.Deployment/GetByLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeploymentServer).GetByLabels(ctx, req.(*DeploymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Deployment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "k8s.Deployment",
	HandlerType: (*DeploymentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByLabels",
			Handler:    _Deployment_GetByLabels_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "deployment.proto",
}
